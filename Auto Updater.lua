do local shared=odh_shared_plugins;local custom_tab=shared.AddSection("Customizations");local Players=game:GetService("Players");local Lighting=game:GetService("Lighting");local UIS=game:GetService("UserInputService");local RunService=game:GetService("RunService");local LocalPlayer=Players.LocalPlayer;local Camera=workspace.CurrentCamera;local blur=Lighting:FindFirstChildOfClass("BlurEffect") or Instance.new("BlurEffect") ;blur.Parent=Lighting;blur.Size=0;local mb_enabled=false;local lastCFrame=Camera.CFrame;local lerpSpeed=6;local maxBlur=8;local minThreshold=0.03;custom_tab:AddToggle("Enable Motion Blur",function(on) mb_enabled=on;if  not on then blur.Size=0;end end);custom_tab:AddSlider("Blur Strength",1,20,maxBlur,function(v) maxBlur=v;end);custom_tab:AddSlider("Blur Smoothness",1,15,lerpSpeed,function(v) lerpSpeed=v;end);RunService.RenderStepped:Connect(function(delta) if  not mb_enabled then return;end local lastLook=lastCFrame.LookVector;local currentLook=Camera.CFrame.LookVector;local dot=math.clamp(lastLook:Dot(currentLook), -1,1);local angle=math.acos(dot);local target=0;if (angle>minThreshold) then target=math.clamp(angle/0.04 ,0,1) * maxBlur ;end blur.Size=blur.Size + ((target-blur.Size) * math.clamp(lerpSpeed * delta ,0,1)) ;lastCFrame=Camera.CFrame;end);local jb_enabled=false;local jb_size=100;local function findJumpButton() local pg=LocalPlayer:FindFirstChild("PlayerGui");if  not pg then return nil;end local tg=pg:FindFirstChild("TouchGui");if  not tg then return nil;end local tcf=tg:FindFirstChild("TouchControlFrame");if tcf then local jb=tcf:FindFirstChild("JumpButton",true);if (jb and (jb:IsA("ImageButton") or jb:IsA("TextButton"))) then return jb;end end for _,d in ipairs(tg:GetDescendants()) do if ((d.Name=="JumpButton") and (d:IsA("ImageButton") or d:IsA("TextButton"))) then return d;end end return nil;end local function setJumpButtonSize(px) local jb=findJumpButton();if  not jb then return;end local screen=Camera.ViewportSize;local maxSize=math.min(screen.X,screen.Y) * 0.25 ;local clamped=math.clamp(px,50,maxSize);jb.Size=UDim2.new(0,clamped,0,clamped);jb.Position=UDim2.new(1, -clamped-20 ,1, -clamped-20 );end custom_tab:AddToggle("Jump Button Size Changer (Mobile & Tablet)",function(on) jb_enabled=on;if  not UIS.TouchEnabled then return;end if on then setJumpButtonSize(jb_size);end end);custom_tab:AddSlider("Jump Button Size Changer (Mobile & Tablet)",50,125,jb_size,function(v) jb_size=v;if (jb_enabled and UIS.TouchEnabled) then setJumpButtonSize(jb_size);end end);LocalPlayer.PlayerGui.ChildAdded:Connect(function(child) if (jb_enabled and UIS.TouchEnabled and (child.Name=="TouchGui")) then task.defer(function() setJumpButtonSize(jb_size);end);end end);local outline_enabled=false;local outline_rainbow=false;local tool_highlights={};local colors={Black=Color3.fromRGB(0,0,0),White=Color3.fromRGB(255,255,255),Red=Color3.fromRGB(255,0,0),Blue=Color3.fromRGB(0,0,255),Pink=Color3.fromRGB(255,105,180),Magenta=Color3.fromRGB(255,0,255),Purple=Color3.fromRGB(128,0,128),Orange=Color3.fromRGB(255,165,0),Green=Color3.fromRGB(0,128,0),Cyan=Color3.fromRGB(0,255,255),Yellow=Color3.fromRGB(255,255,0),Gold=Color3.fromRGB(255,215,0),Ocean=Color3.fromRGB(0,128,255)};local defaultOutline=colors.Purple;local defaultFill=colors.Black;local selectedOutline=defaultOutline;local selectedFill=defaultFill;local function ensureOutline(tool) if  not tool:IsA("Tool") then return;end local handle=tool:FindFirstChild("Handle");if ( not handle or  not handle:IsA("BasePart")) then return;end handle.LocalTransparencyModifier=0;local hl=tool:FindFirstChild("ToolOutline");if  not hl then hl=Instance.new("Highlight");hl.Name="ToolOutline";hl.Adornee=handle;hl.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;hl.FillTransparency=0.8;hl.OutlineTransparency=0.8;hl.Parent=tool;end hl.Enabled=outline_enabled;hl.OutlineColor=selectedOutline;hl.FillColor=selectedFill;tool_highlights[tool]=hl;end local function applyOutlineToAllTools() tool_highlights={};for _,t in ipairs(LocalPlayer.Backpack:GetChildren()) do ensureOutline(t);end local char=LocalPlayer.Character;if char then for _,t in ipairs(char:GetChildren()) do ensureOutline(t);end end end local function removeOutlines() for tool,hl in pairs(tool_highlights) do if hl then hl:Destroy();end if (tool and tool:FindFirstChild("Handle")) then tool.Handle.LocalTransparencyModifier=0.5;end end tool_highlights={};end local function applyOnRespawn() local char=LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() ;char:WaitForChild("HumanoidRootPart");applyOutlineToAllTools();end custom_tab:AddToggle("Enable Tool Outline Theme",function(on) outline_enabled=on;if on then applyOnRespawn();else removeOutlines();end end);local colorNames={};for name,_ in pairs(colors) do table.insert(colorNames,name);end custom_tab:AddDropdown("Select Outline Color",colorNames,function(selected) selectedOutline=colors[selected];for _,hl in pairs(tool_highlights) do if hl then hl.OutlineColor=selectedOutline;end end end);custom_tab:AddDropdown("Select Fill Color",colorNames,function(selected) selectedFill=colors[selected];for _,hl in pairs(tool_highlights) do if hl then hl.FillColor=selectedFill;end end end);custom_tab:AddToggle("Rainbow Tool Outline",function(on) outline_rainbow=on;end);local hue=0;RunService.RenderStepped:Connect(function() if  not outline_rainbow then return;end hue=(hue + 0.5)%360 ;local color=Color3.fromHSV(hue/360 ,1,1);for _,hl in pairs(tool_highlights) do if hl then hl.OutlineColor=color;hl.FillColor=color;end end end);LocalPlayer.Backpack.ChildAdded:Connect(function(obj) if outline_enabled then ensureOutline(obj);end end);LocalPlayer.CharacterAdded:Connect(function() if outline_enabled then task.defer(applyOnRespawn);end end);local shared=odh_shared_plugins;local Players=game:GetService("Players");local LocalPlayer=Players.LocalPlayer;local Camera=workspace.CurrentCamera;local RunService=game:GetService("RunService");local ui_tab=shared.AddSection("UI & Fonts");local wideScreenEnabled=false;local wideScreenStrength=0.7;ui_tab:AddToggle("Wide Screen",function(on) wideScreenEnabled=on;end);RunService.RenderStepped:Connect(function() if wideScreenEnabled then Camera.CFrame=Camera.CFrame * CFrame.new(0,0,0,1,0,0,0,wideScreenStrength,0,0,0,1) ;end end);local fonts={["SourceSans (Original)"]=Enum.Font.SourceSans,Gotham=Enum.Font.Gotham,Arcade=Enum.Font.Arcade,Arial=Enum.Font.Arial,ArialBold=Enum.Font.ArialBold,Cartoon=Enum.Font.Cartoon,Fantasy=Enum.Font.Fantasy,Highway=Enum.Font.Highway,Code=Enum.Font.Code,Legacy=Enum.Font.Legacy};local selectedFont="SourceSans (Original)";ui_tab:AddDropdown("Select Font",{"SourceSans (Original)","Gotham","Arcade","Arial","ArialBold","Cartoon","Fantasy","Highway","Code","Legacy"},function(option) selectedFont=option;for _,gui in ipairs(LocalPlayer.PlayerGui:GetDescendants()) do if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) then gui.Font=fonts[selectedFont];end end end);LocalPlayer.PlayerGui.DescendantAdded:Connect(function(gui) if (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) then gui.Font=fonts[selectedFont];end end);local shared=odh_shared_plugins;local perf_tab=shared.AddSection("Performance & FPS");local credits_tab=shared.AddSection("Credits");local Lighting=game:GetService("Lighting");local Workspace=game:GetService("Workspace");local Players=game:GetService("Players");local original_materials={};local original_particle_states={};local original_textures={};local original_mesh_transparency={};local original_accessories={};local conns={};local function isPlayerDescendant(obj) for _,plr in ipairs(Players:GetPlayers()) do if (plr.Character and obj:IsDescendantOf(plr.Character)) then return true;end end return false;end local function applyMeshToObj(obj) if isPlayerDescendant(obj) then return;end if obj:IsA("MeshPart") then if (original_mesh_transparency[obj]==nil) then original_mesh_transparency[obj]=obj.Transparency;end obj.Transparency=1;return;end if (obj:IsA("SpecialMesh") or obj:IsA("BlockMesh") or obj:IsA("CylinderMesh")) then local parent=obj.Parent;if (parent and parent:IsA("BasePart") and  not isPlayerDescendant(parent)) then if (original_mesh_transparency[parent]==nil) then original_mesh_transparency[parent]=parent.Transparency;end parent.Transparency=1;end end end local function setMeshes(on) if on then for _,obj in ipairs(Workspace:GetDescendants()) do applyMeshToObj(obj);end if  not conns.Meshes then conns.Meshes=Workspace.DescendantAdded:Connect(function(obj) task.defer(function() applyMeshToObj(obj);end);end);end else for part,trans in pairs(original_mesh_transparency) do if (part and part.Parent) then pcall(function() part.Transparency=trans;end);end end original_mesh_transparency={};if conns.Meshes then conns.Meshes:Disconnect();conns.Meshes=nil;end end end local function setAccessories(on) if on then for _,plr in ipairs(Players:GetPlayers()) do local char=plr.Character;if char then for _,acc in ipairs(char:GetChildren()) do if acc:IsA("Accessory") then original_accessories[acc]=plr;acc.Parent=nil;end end end end if  not conns.CharacterAdded then conns.CharacterAdded=Players.PlayerAdded:Connect(function(p) p.CharacterAdded:Connect(function(ch) task.defer(function() for _,acc in ipairs(ch:GetChildren()) do if acc:IsA("Accessory") then original_accessories[acc]=p;acc.Parent=nil;end end end);end);end);end else for acc,owner in pairs(original_accessories) do if (owner and owner.Character and acc and  not acc.Parent) then pcall(function() acc.Parent=owner.Character;end);end end original_accessories={};if conns.CharacterAdded then conns.CharacterAdded:Disconnect();conns.CharacterAdded=nil;end end end local function setSmoothPlastic(on) if on then for _,obj in ipairs(Workspace:GetDescendants()) do if (obj:IsA("BasePart") and  not isPlayerDescendant(obj) and (obj.Material~=Enum.Material.SmoothPlastic)) then original_materials[obj]=obj.Material;obj.Material=Enum.Material.SmoothPlastic;end end if  not conns.Smooth then conns.Smooth=Workspace.DescendantAdded:Connect(function(obj) if (obj:IsA("BasePart") and  not isPlayerDescendant(obj)) then original_materials[obj]=obj.Material;obj.Material=Enum.Material.SmoothPlastic;end end);end else for part,mat in pairs(original_materials) do if (part and part.Parent) then pcall(function() part.Material=mat;end);end end original_materials={};if conns.Smooth then conns.Smooth:Disconnect();conns.Smooth=nil;end end end local function setParticles(on) if on then for _,obj in ipairs(Workspace:GetDescendants()) do if (obj:IsA("ParticleEmitter") or obj:IsA("Trail")) then original_particle_states[obj]=obj.Enabled;obj.Enabled=false;end end if  not conns.Particles then conns.Particles=Workspace.DescendantAdded:Connect(function(obj) if (obj:IsA("ParticleEmitter") or obj:IsA("Trail")) then original_particle_states[obj]=obj.Enabled;obj.Enabled=false;end end);end else for obj,state in pairs(original_particle_states) do if (obj and obj.Parent) then pcall(function() obj.Enabled=state;end);end end original_particle_states={};if conns.Particles then conns.Particles:Disconnect();conns.Particles=nil;end end end local function setTextures(on) if on then for _,obj in ipairs(Workspace:GetDescendants()) do if (obj:IsA("Decal") or obj:IsA("Texture")) then if (original_textures[obj]==nil) then original_textures[obj]=obj.Texture;end obj.Texture="";end end if  not conns.Textures then conns.Textures=Workspace.DescendantAdded:Connect(function(obj) if (obj:IsA("Decal") or obj:IsA("Texture")) then if (original_textures[obj]==nil) then original_textures[obj]=obj.Texture;end obj.Texture="";end end);end else for obj,tex in pairs(original_textures) do if (obj and obj.Parent) then pcall(function() obj.Texture=tex;end);end end original_textures={};if conns.Textures then conns.Textures:Disconnect();conns.Textures=nil;end end end local function setShadows(on) Lighting.GlobalShadows= not on;end local function setGraySky(on) if on then for _,obj in ipairs(Lighting:GetChildren()) do obj:Destroy();end local sky=Instance.new("Sky");local assetId="rbxassetid://99742693890881";sky.SkyboxBk=assetId;sky.SkyboxDn=assetId;sky.SkyboxFt=assetId;sky.SkyboxLf=assetId;sky.SkyboxRt=assetId;sky.SkyboxUp=assetId;sky.Parent=Lighting;else for _,obj in ipairs(Lighting:GetChildren()) do if obj:IsA("Sky") then obj:Destroy();end end end end if perf_tab then perf_tab:AddToggle("No Textures (SmoothPlastic)",setSmoothPlastic);perf_tab:AddToggle("Disable Shadows",setShadows);perf_tab:AddToggle("Disable Particles/Trails",setParticles);perf_tab:AddToggle("Hide Meshes (world only)",setMeshes);perf_tab:AddToggle("Remove Textures/Decals",setTextures);perf_tab:AddToggle("Remove Accessories",setAccessories);perf_tab:AddToggle("Gray Skybox",setGraySky);perf_tab:AddButton("Remove Weapon Displays",function() local wd=Workspace:FindFirstChild("WeaponDisplays");if wd then wd:Destroy();end end);end local Players=game:GetService("Players");local RunService=game:GetService("RunService");local LocalPlayer=Players.LocalPlayer;local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local Workspace=game:GetService("Workspace");local LocalPlayer=Players.LocalPlayer;local trickTab=odh_shared_plugins.AddSection("Trickshot & Movement");local trickshotEnabled=false;local strafeEnabled=false;local strafeSpeed=16;local spinSpeed=math.rad(15);local spinning=false;local strafeDirection=1;local jumpBoostEnabled=false;local jumpBoostSize=50;local jump360Enabled=false;local jump360Size=100;local screenGuiJump,screenGui360;local buttonJump,button360;local humanoid;local boosted=false;local originalJumpPower=50;local spinOnNextJump=false;local function setupHumanoid(h) humanoid=h;originalJumpPower=humanoid.JumpPower;boosted=false;humanoid:GetPropertyChangedSignal("Jump"):Connect(function() if (boosted and humanoid.Jump) then task.wait(0.1);humanoid.JumpPower=originalJumpPower;boosted=false;end if (jump360Enabled and spinOnNextJump and humanoid.Jump) then local HRP=LocalPlayer.Character:FindFirstChild("HumanoidRootPart");if HRP then local totalSpin=math.rad(360);local steps=30;local stepAngle=totalSpin/steps ;local stepTime=0.01;for i=1,steps do HRP.CFrame=HRP.CFrame * CFrame.Angles(0,stepAngle * (spinSpeed/math.rad(15)) ,0) ;task.wait(stepTime);end spinOnNextJump=false;end end end);end local function onCharacterAdded(char) local hum=char:WaitForChild("Humanoid");setupHumanoid(hum);end if LocalPlayer.Character then onCharacterAdded(LocalPlayer.Character);end LocalPlayer.CharacterAdded:Connect(onCharacterAdded);local function setupJumpButton() if screenGuiJump then screenGuiJump:Destroy();end screenGuiJump=Instance.new("ScreenGui",LocalPlayer:WaitForChild("PlayerGui"));screenGuiJump.ResetOnSpawn=false;buttonJump=Instance.new("TextButton");buttonJump.Size=UDim2.new(0,jumpBoostSize,0,jumpBoostSize);buttonJump.Position=UDim2.new(0.5, -jumpBoostSize/2 ,0.5, -jumpBoostSize/2 );buttonJump.Text="Jump Boost";buttonJump.BackgroundColor3=Color3.new(0,0,0);buttonJump.TextColor3=Color3.new(1,1,1);buttonJump.Font=Enum.Font.Arcade;buttonJump.TextSize=18;buttonJump.Active=true;buttonJump.Draggable=true;buttonJump.Parent=screenGuiJump;buttonJump.MouseButton1Click:Connect(function() if (humanoid and  not boosted) then originalJumpPower=humanoid.JumpPower;humanoid.JumpPower=125;boosted=true;end end);end local function setup360Button() if screenGui360 then screenGui360:Destroy();end screenGui360=Instance.new("ScreenGui",LocalPlayer:WaitForChild("PlayerGui"));screenGui360.ResetOnSpawn=false;button360=Instance.new("TextButton");button360.Size=UDim2.new(0,jump360Size,0,jump360Size);button360.Position=UDim2.new(0.5, -jump360Size/2 ,0.5, -jump360Size/2 );button360.Text="360 Jump";button360.BackgroundColor3=Color3.new(0,0,0);button360.TextColor3=Color3.new(1,1,1);button360.Font=Enum.Font.Arcade;button360.TextSize=18;button360.Active=true;button360.Draggable=true;button360.Parent=screenGui360;button360.MouseButton1Click:Connect(function() spinOnNextJump=true;end);end trickTab:AddToggle("Enable Automatic 360 Trickshot",function(on) trickshotEnabled=on;end);trickTab:AddToggle("Enable Automatic Strafe",function(on) strafeEnabled=on;end);trickTab:AddSlider("Strafe Speed",4,32,strafeSpeed,function(v) strafeSpeed=v;end);trickTab:AddSlider("360 Spin Speed",1,50,math.deg(spinSpeed),function(v) spinSpeed=math.rad(v);end);trickTab:AddToggle("Enable Jump Boost Button",function(on) jumpBoostEnabled=on;if on then setupJumpButton();elseif screenGuiJump then screenGuiJump:Destroy();screenGuiJump=nil;end end);trickTab:AddSlider("Jump Boost Button Size",20,150,jumpBoostSize,function(v) jumpBoostSize=v;if buttonJump then buttonJump.Size=UDim2.new(0,jumpBoostSize,0,jumpBoostSize);buttonJump.Position=UDim2.new(0.5, -jumpBoostSize/2 ,0.5, -jumpBoostSize/2 );end end);trickTab:AddToggle("Enable 360 Jump Button",function(on) jump360Enabled=on;if on then setup360Button();elseif screenGui360 then screenGui360:Destroy();screenGui360=nil;end end);trickTab:AddSlider("360 Jump Button Size",50,200,jump360Size,function(v) jump360Size=v;if button360 then button360.Size=UDim2.new(0,jump360Size,0,jump360Size);button360.Position=UDim2.new(0.5, -jump360Size/2 ,0.5, -jump360Size/2 );end end);RunService.RenderStepped:Connect(function(delta) local char=LocalPlayer.Character;if  not char then return;end local HRP=char:FindFirstChild("HumanoidRootPart");local humanoid=char:FindFirstChildOfClass("Humanoid");if ( not HRP or  not humanoid) then return;end if strafeEnabled then local moveVec=HRP.CFrame.RightVector * strafeDirection ;HRP.CFrame=HRP.CFrame + (moveVec.Unit * strafeSpeed * delta) ;if ((tick()%1)<0.5) then strafeDirection=1;else strafeDirection= -1;end end if trickshotEnabled then if (humanoid:GetState()==Enum.HumanoidStateType.Freefall) then spinning=true;elseif (spinning and (humanoid:GetState()==Enum.HumanoidStateType.Landed)) then spinning=false;end if spinning then HRP.CFrame=HRP.CFrame * CFrame.Angles(0,spinSpeed,0) ;end end end);local wallhopEnabled=false;local InfiniteJumpEnabled=true;local wallRaycastParams=RaycastParams.new();wallRaycastParams.FilterType=Enum.RaycastFilterType.Blacklist;local function getWallRaycastResult() local character=LocalPlayer.Character;if  not character then return nil;end local hrp=character:FindFirstChild("HumanoidRootPart");if  not hrp then return nil;end wallRaycastParams.FilterDescendantsInstances={character};local closestHit,minDistance=nil,3;local hrpCF=hrp.CFrame;for i=0,7 do local angle=math.rad(i * 45 );local dir=(hrpCF * CFrame.Angles(0,angle,0)).LookVector;local ray=Workspace:Raycast(hrp.Position,dir * 2 ,wallRaycastParams);if (ray and ray.Instance and (ray.Distance<minDistance)) then minDistance=ray.Distance;closestHit=ray;end end return closestHit;end local function performWallhop() local character=LocalPlayer.Character;local humanoid=character and character:FindFirstChildOfClass("Humanoid") ;local rootPart=character and character:FindFirstChild("HumanoidRootPart") ;if  not (humanoid and rootPart and (humanoid:GetState()~=Enum.HumanoidStateType.Dead)) then return;end local wall=getWallRaycastResult();if  not wall then return;end rootPart.CFrame=CFrame.lookAt(rootPart.Position,rootPart.Position + wall.Normal );RunService.Heartbeat:Wait();if (humanoid:GetState()~=Enum.HumanoidStateType.Dead) then humanoid:ChangeState(Enum.HumanoidStateType.Jumping);task.wait(0.1);end end trickTab:AddToggle("Enable Wallhop",function(on) wallhopEnabled=on;end);trickTab:AddKeybind("Wallhop Jump Key","J",performWallhop);UserInputService.JumpRequest:Connect(function() if (wallhopEnabled and InfiniteJumpEnabled) then performWallhop();end end);trickTab:AddLabel('Credits To: <font color="rgb(255,0,255)">not_.gato (@HeyyCaf) - Owner of the feature</font>');local Players=game:GetService("Players");local RunService=game:GetService("RunService");local Stats=game:GetService("Stats");local LocalPlayer=Players.LocalPlay
